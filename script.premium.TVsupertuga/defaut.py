exec("import re;import base64");exec(base64.b64decode("#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


##############BIBLIOTECAS A IMPORTAR E DEFINICOES####################
import urllib,urllib2,sys,re,xbmcplugin,xbmcgui,xbmcaddon,xbmc,os,json,glob,threading,gzip,xbmcvfs,cookielib,pprint,datetime,thread,time,urlparse,base64,plugintools,calendar
import xml.etree.ElementTree as ET
import fileUtils as fu

from resources.lib import common
from urllib2 import Request, urlopen
from datetime import date
from bs4 import BeautifulSoup
from resources.lib import Downloader #Enen92 class
from resources.lib import Player
from resources.lib import TVArchive
from t0mm0.common.net import Net
from t0mm0.common.addon import Addon
from t0mm0.common.net import HttpResponse
from resources.lib import URLResolverMedia
from resources.lib import Trakt
from resources.lib import Database
from unicodedata import normalize

####################################################### CONSTANTES #####################################################

global g_timer
global televisioonilink
global filmilink
global andmelink
global uuenduslink
global uuendused
global vanemalukk
global version
global mode

reload(sys)
sys.setdefaultencoding('utf8')
AddonTitle = "TVsupertuga Premium"
mode = 3333
version = ""
kasutajanimi = ""
salasona = ""
lehekylg = ""
vanemakood = ""
vanemalukk = ""
televisioonilink = ""
filmilink = ""
andmelink = ""

_LIILL_ = "aHR0cDovL2lwdHZwYi5zZWxmaXAubmV0OjgwMDA="
__ADDON_ID__	= xbmcaddon.Addon().getAddonInfo("id")
__ADDON__	= xbmcaddon.Addon(__ADDON_ID__)
__ADDONVERSION__ = __ADDON__.getAddonInfo('version')
__ADDON_FOLDER__	= __ADDON__.getAddonInfo('path')
__SETTING__	= xbmcaddon.Addon().getSetting
__ART_FOLDER__	= __ADDON_FOLDER__ + '/resources/img/'
__SKIN__ = 'v2'
__FANART__ = os.path.join(__ART_FOLDER__, __SKIN__, 'fundo.png')
__PASTA_DADOS__ = Addon(__ADDON_ID__).get_profile().decode("utf-8")
__PASTA_FILMES__ = xbmc.translatePath(__ADDON__.getSetting('bibliotecaFilmes'))
__PASTA_SERIES__ = xbmc.translatePath(__ADDON__.getSetting('bibliotecaSeries'))
__COOKIE_FILE__ = os.path.join(xbmc.translatePath('special://userdata/addon_data/script.premium.TVsupertuga/').decode('utf-8'), 'cookie.tvsupertugapremium')
__API__ = base64.urlsafe_b64decode('aHR0cDovL21wYXBpLm1sLw==')
__API_SITE__ = base64.urlsafe_b64decode('aHR0cDovL21wYXBpLm1sL2FwaS8=')
__SITEAddon__ = base64.urlsafe_b64decode('aHR0cDovL3d3dy5wY3RlY2tzZXJ2LmNvbS9HcnVwb0tvZGkvQWRkb24v')
_ICON_ = os.path.join(__ART_FOLDER__, __SKIN__, 'icon.png')
__HEADERS__ = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:43.0) Gecko/20100101 Firefox/43.0', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'}
headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:43.0) Gecko/20100101 Firefox/43.0', 'Accept-Charset': 'utf-8;q=0.7,*;q=0.7', 'Content-Type': 'application/json'}

###################################################################################
#							  Iniciar Addon										  #
###################################################################################

def __ALERTA__(text1="",text2="",text3=""):
	if text3=="": xbmcgui.Dialog().ok(text1,text2)
	elif text2=="": xbmcgui.Dialog().ok("",text1)
	else: xbmcgui.Dialog().ok(text1,text2,text3)

def criarMenu(pai,nome,logo,url,tipo,fanart):
	menus = {
			'nome': '',
			'logo': '',
			'url': '',
			'tipo': '',
			'fanart': ''
			}
	menus['nome'] = nome
	menus['logo'] = logo
	menus['url'] = url
	menus['tipo'] = tipo
	menus['fanart'] = fanart
	pai.append(menus)
	
def menu():
	if (not __ADDON__.getSetting('login_name') or not __ADDON__.getSetting('login_password')):
		__ALERTA__(AddonTitle, 'Precisa de definir o seu Utilizador e Senha')
		abrirDefinincoes()
		
	else:	
		check_login = login(base64.b64decode(_LIILL_))
		if check_login['user']['username'] != '':
			if check_login['user']['estado'] == 'Expired':
				__ALERTA__(AddonTitle, 'A sua conta está Expirada. Por favor faça a sua Renovação ou Reactivação.')		
			else:
				if check_login['user']['trial'] == 'Yes' and check_login['user']['data'] != 'Never':
					__ALERTA__(AddonTitle, 'A conta é uma conta de Teste. Após o teste e gostar faça a sua Aquisição.')
				if check_login['user']['data'] != 'Never' and check_login['user']['trial'] == 'No':
					if check_login['user']['data'] == '0' and check_login['user']['trial'] != 'Yes':
						__ALERTA__(AddonTitle, 'A sua conta expira Hoje. Faça já a sua Renovação.')
					else:
						if int(check_login['user']['data']) < 5 and check_login['user']['data'] > 0:
							__ALERTA__(AddonTitle, 'A sua conta expira daqui a '+str(check_login['user']['data'])+ ' dias. Faça já a sua Renovação.')
				criarMenu(check_login['menus'],"Minha Conta",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_con.png'),base64.b64decode(_LIILL_),"conta",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_con.png'))
				criarMenu(check_login['menus'],"Ver TV",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_tv.png'),base64.b64decode(_LIILL_),"tv",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv.png'))
				criarMenu(check_login['menus'],"Vídeo Clube",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_vid.png'),base64.b64decode(_LIILL_),"filmes",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_vid.png'))
				criarMenu(check_login['menus'],"TV Archive",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_tv_arc.png'),base64.b64decode(_LIILL_),"tvarchive",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv_arc.png'))
				criarMenu(check_login['menus'],"Configurações",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_def.png'),"configurar","configurar",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_def.png'))
				criarMenu(check_login['menus'],"Limpar Cache",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_lim.png'),"limparcache","limparcache",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_lim.png'))
				criarMenu(check_login['menus'],"Limpar Tudo Gravado",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_lim.png'),"limpartudo","limpartudo",os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_lim.png'))
				
				Menu_inicial(check_login,False,'')
			vista_menu()
		else:
			__ALERTA__(AddonTitle, 'Utilizador ou senha Incorrectos. Altere e tente novamente.')
			addDir('Alterar Definições', 'url', 5, 'Miniatura', os.path.join(__ART_FOLDER__, __SKIN__, 'ico_def.png'),'', os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_def.png'))
			addDir('Entrar novamente', 'url', None, 'Miniatura', os.path.join(__ART_FOLDER__, __SKIN__, 'ico_lim.png'),'',os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_lim.png'))
			vista_menu()

###################################################################################
#							  Login Addon										  #
###################################################################################

def login(url):
	informacoes = {
		'user' : {
			'username': '',
			'password': '',
			'estado': '',
			'data': '',
			'trial': '',
			'lista': '',
			'coneccoes': ''
			
		},
		'menus': []
	} # 
	andmelink = url+'/player_api.php?mode=user_info&username='+__ADDON__.getSetting("login_name")+'&password='+__ADDON__.getSetting("login_password")
	andmed = grab_epg(andmelink)
	if andmed != None:
		kasutajaAndmed = andmed[sync_data("dXNlcl9pbmZv")]
		kasutajaAndmed2 = andmed[sync_data("c2VydmVyX2luZm8=")]
		seis = kasutajaAndmed[get_live("c3RhdHVz")]
		aegub = kasutajaAndmed[sync_data("ZXhwX2RhdGU=")]
		if aegub:
			aegub = date.fromtimestamp(int(aegub)).strftime("%Y-%m-%d")
			eaeaen = kasutajaAndmed2[sync_data("dGltZV9ub3c=")]
			
			viewStartDate = datetime.datetime.now().strftime("%Y-%m-%d")
			
			format = "%Y-%m-%d"
			
			try:
				hoje1 = datetime.datetime.strptime(aegub, format)
			except TypeError:
				hoje1 = datetime.datetime(*(time.strptime(aegub, format)[0:6]))
			
			try:
				hoje2 = datetime.datetime.strptime(viewStartDate, format)
			except TypeError:
				hoje2 = datetime.datetime(*(time.strptime(viewStartDate, format)[0:6]))
			
			aegub = str(abs((hoje1-hoje2).days))
		else:
			aegub = vod_channels("TmV2ZXI=") 
		rabbits = kasutajaAndmed[vod_channels("aXNfdHJpYWw=")]
		if rabbits == "0":
			rabbits = sync_data("Tm8=")
		else:
			rabbits = sync_data("WWVz")
		leavemealone = kasutajaAndmed[get_live("bWF4X2Nvbm5lY3Rpb25z")]
		polarbears = kasutajaAndmed[sync_data("dXNlcm5hbWU=")]
		
		if(polarbears != ''):
			informacoes['user']['username'] = "[COLOR = white]Utilizador: [/COLOR]"+polarbears
			informacoes['user']['estado'] = seis
			informacoes['user']['data'] = aegub
			informacoes['user']['trial'] = rabbits
			informacoes['user']['coneccoes'] = "[COLOR = white]Maximo de Connec: [/COLOR]"+leavemealone
			informacoes['user']['lista'] = url
	
	return informacoes

def login2():
	resultado = False
	try:
		post = {'username': __ADDON__.getSetting('email'), 'password': __ADDON__.getSetting('password'),'grant_type': 'password', 'client_id': 'kodi', 'client_secret':'pyRmmKK3cbjouoDMLXNtt2eGkyTTAG' }
		
		resultado = abrir_url(__API_SITE__+'login', post=json.dumps(post), header=headers)
		
		if resultado == 'DNS':
			__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
			return False
		
		resultado = json.loads(resultado)
		#colocar o loggedin
		token = resultado['access_token']
		refresh = resultado['refresh_token']
		headersN = headers
		headersN['Authorization'] = 'Bearer %s' % token
		
		resultado = abrir_url(__API_SITE__+'me', header=headersN)
		resultado = json.loads(resultado)
		try:
			username = resultado['username'].decode('utf-8')
		except:
			username = resultado['username'].encode('utf-8')
		
		if resultado['email'] == __ADDON__.getSetting('email'):
			__ADDON__.setSetting('tokenMrpiracy', token)
			__ADDON__.setSetting('refreshMrpiracy', refresh)
			__ADDON__.setSetting('loggedin', username)
			return True
	except:
		__ALERTA__(AddonTitle, 'Não foi possível abrir a página. Por favor tente novamente.')
		return False

def Menu_inicial(men,build,tipo):
	_nomeuser = men['user']['username']
	for menu in men['menus']:
		nome = menu['nome']
		logo = menu['logo']
		link = menu['url']
		tipo = menu['tipo']
		fanart = menu['fanart']
		
		if tipo == 'conta' :
			addDir(nome,link,2,'Miniatura',logo,tipo,fanart)
		elif(tipo == 'tv'):
			addDir(nome,link,3,'Miniatura',logo,tipo,fanart)
		elif(tipo == 'filmes'):
			addDir(nome,link,1,'Miniatura',logo,tipo,fanart)
		elif(tipo == 'configurar'):
			addDir(nome,link,5,'Lista',logo,tipo,fanart)
		elif tipo == 'tvarchive':
			addDir(nome,link,6,'Miniatura',logo,'',fanart)	
		elif(tipo == 'limparcache'):
			addDir(nome, link, 13, 'Lista',logo,tipo,fanart)
		elif(tipo == 'limpartudo'):
			addDir(nome, link, 14, 'Lista',logo,tipo,fanart)
		
	xbmc.executebuiltin('Notification(%s, %s, %i, %s)'%(AddonTitle,_nomeuser, 8000, _ICON_))
	xbmcplugin.endOfDirectory(int(sys.argv[1]),cacheToDisc=False)

def abrirVideoClube(url):
	addDir('Filmes',url,21,'Miniatura',os.path.join(__ART_FOLDER__, __SKIN__, 'filmes.png'),'Filme',os.path.join(__ART_FOLDER__, __SKIN__, 'fundo.png'))					
	addDir('Séries',url,20,'Miniatura',os.path.join(__ART_FOLDER__, __SKIN__, 'series.png'),'Serie',os.path.join(__ART_FOLDER__, __SKIN__, 'fundo.png'))
	#addDir('Animes',url,24,'Miniatura',__SITEAddon__+'Imagens/anime.png','Anime',__SITEAddon__+'Imagens/series_fanart.png')
	addDir('Pesquisa',__API_SITE__,120,'Lista',os.path.join(__ART_FOLDER__, __SKIN__, 'pesquisa.png'),'pesquisa',os.path.join(__ART_FOLDER__, __SKIN__, 'fundo.png'))


###################################################################################
#							  Abrir Info Conta									  #
###################################################################################

def Abrir_Conta(url):
	andmelink = url+'/panel_api.php?username='+__ADDON__.getSetting("login_name")+'&password='+__ADDON__.getSetting("login_password")
	execute_ainfo(andmelink)

###############################################################################################################
#													Abrir Info TVS											 #
###############################################################################################################

def abrim3u(url):
	version = __ADDONVERSION__
	kasutajanimi=__ADDON__.getSetting("login_name")
	salasona=__ADDON__.getSetting("login_password")
	lehekylg=url
	vanemakood=__ADDON__.getSetting("login_adultos")
	vanemalukk=__ADDON__.getSetting("login_adultos_sim")
	
	televisioonilink = url+'/enigma2.php?username='+__ADDON__.getSetting("login_name")+'&password='+__ADDON__.getSetting("login_password")+'&type=get_live_categories'
	security_check(televisioonilink)

def security_check(url):
	request = urllib2.Request(url, headers={"Accept" : "application/xml"})
	u = urllib2.urlopen(request)
	tree = ET.parse(u)
	rootElem = tree.getroot()
	for channel in tree.findall("channel"):
		kanalinimi = channel.find("title").text
		kanalinimi = base64.b64decode(kanalinimi)
		kategoorialink = channel.find("playlist_url").text
		
		addDir(kanalinimi,kategoorialink,8,'Miniatura',os.path.join(__ART_FOLDER__, __SKIN__, 'ico_tv.png'),'',os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv.png'))
	
	vista_Grupos()

def detect_modification(url):
	filmilink = url+'/enigma2.php?username='+__ADDON__.getSetting("login_name")+'&password='+__ADDON__.getSetting("login_password")+'&type=get_vod_categories'
	request = urllib2.Request(filmilink, headers={"Accept" : "application/xml"})
	u = urllib2.urlopen(request)
	tree = ET.parse(u)
	rootElem = tree.getroot()
	for channel in tree.findall("channel"):
		filminimi = channel.find("title").text
		filminimi = base64.b64decode(filminimi)
		kategoorialink = channel.find("playlist_url").text
		
		addDir(filminimi,kategoorialink,9,'Miniatura',os.path.join(__ART_FOLDER__, __SKIN__, 'ico_vid.png'),'',os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_vid.png'))
	
	vista_Grupos()

def stream_video(name,url,image):
	vanemalukk=__ADDON__.getSetting("login_adultos_sim")
	if vanemalukk == "true":
		vanema_lukk(name)
	request = urllib2.Request(url, headers={"Accept" : "application/xml"})
	u = urllib2.urlopen(request)
	tree = ET.parse(u)
	rootElem = tree.getroot()
	for channel in tree.findall(sync_data("Y2hhbm5lbA==")):
		kanalinimi = channel.find(get_live("dGl0bGU=")).text
		kanalinimi = base64.b64decode(kanalinimi)
		kanalinimi = kanalinimi.partition("[")
		striimilink = channel.find(get_live("c3RyZWFtX3VybA==")).text
		pilt = channel.find("desc_image").text
		kava = kanalinimi[1]+kanalinimi[2]
		kava = kava.partition("]")
		kava = kava[2]
		kava = kava.partition("	")
		kava = kava[2]
		shou = get_live("W0NPTE9SIHdoaXRlXSVzIFsvQ09MT1Jd")%(kanalinimi[0])+kava
		kirjeldus = channel.find("description").text
		if kirjeldus:
			kirjeldus = base64.b64decode(kirjeldus)
			nyyd = kirjeldus.partition("(")
			nyyd = "Agora: "+nyyd[0]
			jargmine = kirjeldus.partition(")\n")
			jargmine = jargmine[2].partition("(")
			jargmine = "A seguir: "+jargmine[0]
			kokku = nyyd+jargmine
		else:
			kokku = ""
		if pilt:
			addLinkCanalLista(shou,striimilink,pilt,kokku,os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv.png'))
		else:
			addLinkCanalLista(shou,striimilink,os.path.join(__ART_FOLDER__, __SKIN__, 'ico_tv.png'),kokku,os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv.png'))
	
	xbmcplugin.setContent(int(sys.argv[1]) ,"episodes")
	vista_Canais()

def get_myaccount(name,url,image):
	vanemalukk=__ADDON__.getSetting("login_adultos_sim")
	if vanemalukk == "true":
		vanema_lukk(name)
	
	request = urllib2.Request(url, headers={"Accept" : "application/xml"})
	u = urllib2.urlopen(request)
	tree = ET.parse(u)
	rootElem = tree.getroot()
	for channel in tree.findall("channel"):
		pealkiri = channel.find("title").text
		pealkiri = base64.b64decode(pealkiri)
		pealkiri = pealkiri.encode("utf-8")
		striimilink = channel.find("stream_url").text
		pilt = channel.find("desc_image").text 
		descript = channel.find("description").text
		if descript:
			descript = base64.b64decode(descript)
		if pilt:
			addLinkCanalLista(pealkiri,striimilink,pilt,descript,os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_vid.png'))
		else:
			addLinkCanalLista(pealkiri,striimilink,os.path.join(__ART_FOLDER__, __SKIN__, 'ico_tv.png'),descript,os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_vid.png'))
	
	xbmcplugin.setContent(int(sys.argv[1]) ,"movies")
	vista_Canais()

def addLinkCanalLista(title, url, thumbnail, plot, fanart, isPlayable=True, folder=False):
	ok=True
	
	listitem=xbmcgui.ListItem(title,iconImage=thumbnail,thumbnailImage=thumbnail)
	info_labels={"Title":title,"FileName":title,"Plot":plot}
	listitem.setInfo( "video", info_labels )
	listitem.setProperty('fanart_image', fanart)
	listitem.setArt({'fanart': fanart})
	listitem.setProperty("Video","true")
	u = sys.argv[0] + "?url=" + str(url) + "&mode=10&name=" + str(name) + "&iconimage="+str(iconimage)+"&fanart="+str(fanart)+"&plot="+str(plot)
	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=listitem,isFolder=folder)
	return ok

def run_cronjob(title,url,image,plot,fanart):
	vanemalukk=__ADDON__.getSetting("login_adultos_sim")
	if vanemalukk == "true":
		vanema_lukk(name)
	
	playlist = xbmc.PlayList(xbmc.PLAYLIST_VIDEO)
	playlist.clear()
	
	info_labels={"Title":title,"FileName":title,"Plot":plot}
	listitem=xbmcgui.ListItem(title,iconImage=image,thumbnailImage=image)
	listitem.setInfo( "video", info_labels )
	playlist.add(url=url, listitem=listitem, index=1)
	xbmc.Player().play(playlist)

def sync_data(channel):
	video = base64.b64decode(channel)
	return video

def restart_service(params):
	vanemalukk=__ADDON__.getSetting("login_adultos_sim")
	if vanemalukk == "true":
		pealkiri = params.get(sync_data("dGl0bGU="))
		vanema_lukk(pealkiri)
	lopplink = params.get(vod_channels("dXJs"))
	
	xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, listitem)

def grab_epg(url):
	req = urllib2.Request(url)
	req.add_header(sync_data("VXNlci1BZ2VudA==") , vod_channels("S29kaSBwbHVnaW4gYnkgTGl2ZSF0"))
	response = urllib2.urlopen(req)
	link=response.read()
	if link != '{"user_info":{"auth":0}}':
		jdata = json.loads(link.decode('utf8'))
		response.close()
		if jdata:
			return jdata
	else:
		return None
	
def kontroll(url):
	randomstring = grab_epg(url)
	kasutajainfo = randomstring[sync_data("dXNlcl9pbmZv")]
	kontroll = kasutajainfo[get_live("YXV0aA==")]
	return kontroll
def get_live(channel):
	video = base64.b64decode(channel)
	return video
def execute_ainfo(url):
	andmed = grab_epg(url)
	kasutajaAndmed = andmed[sync_data("dXNlcl9pbmZv")]
	seis = kasutajaAndmed[get_live("c3RhdHVz")]
	aegub = kasutajaAndmed[sync_data("ZXhwX2RhdGU=")]
	if aegub:
		aegub = datetime.datetime.fromtimestamp(int(aegub)).strftime('%H:%M %d.%m.%Y')
	else:
		aegub = vod_channels("TmV2ZXI=") 
	rabbits = kasutajaAndmed[vod_channels("aXNfdHJpYWw=")]
	if rabbits == "0":
		rabbits = sync_data("Tm8=")
	else:
		rabbits = sync_data("WWVz")
	leavemealone = kasutajaAndmed[get_live("bWF4X2Nvbm5lY3Rpb25z")]
	polarbears = kasutajaAndmed[sync_data("dXNlcm5hbWU=")]
	
	addLinkCanalLista("[COLOR = white]Utilizador: [/COLOR]"+polarbears,"","",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_con.png'),os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_con.png'))
	
	addLinkCanalLista("[COLOR = white]Estado: [/COLOR]"+seis,"","",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_con.png'),os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_con.png'))
	
	addLinkCanalLista("[COLOR = white]Expira: [/COLOR]"+aegub,"","",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_con.png'),os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_con.png'))
	
	addLinkCanalLista("[COLOR = white]Conta de Teste: [/COLOR]"+rabbits,"","",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_con.png'),os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_con.png'))
	
	addLinkCanalLista("[COLOR = white]Maximo de Connec: [/COLOR]"+leavemealone,"","",os.path.join(__ART_FOLDER__, __SKIN__, 'ico_con.png'),os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_con.png'))
	
	vista_Grupos()

def vanema_lukk(name):
	a = 'XXX', 'Adult', 'Adults','ADULT','ADULTS','adult','adults','Porn','PORN','porn','Porn','xxx'
	if any(s in name for s in a):
		xbmc.executebuiltin((u'XBMC.Notification("Controlo Parental", "O canal contem conteudo adulto", 2000)'))
		text = plugintools.keyboard_input(default_text="", title="Codigo para controlo parental")
		if text==plugintools.get_setting(sync_data("bG9naW5fYWR1bHRvcw==")):
		  return
		else:
		  exit()
	else:
		name = ""

def DownloaderClass(url,dest):
	dp = xbmcgui.DialogProgress()
	dp.create(sync_data("R2V0dGluZyB1cGRhdGU="),get_live("RG93bmxvYWRpbmc="))
	urllib.urlretrieve(url,dest,lambda nb, bs, fs, url=url: _pbhook(nb,bs,fs,url,dp))

def _pbhook(numblocks, blocksize, filesize, url=None,dp=None):
	try:
		percent = min((numblocks*blocksize*100)/filesize, 100)
		__ALERTA__(AddonTitle, ''+percent)
		dp.update(percent)
	except:
		percent = 100
		dp.update(percent)
	if dp.iscanceled():
		__ALERTA__(AddonTitle, 'O download foi cancelado.')
		dp.close()

def vod_channels(channel):
	video = base64.b64decode(channel)
	return video

def PlayUrl(name, url, iconimage=None):
	listitem = xbmcgui.ListItem(path=url, thumbnailImage=iconimage)
	listitem.setInfo(type="Video", infoLabels={ "Title": name })
	xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, listitem)

###############################################################################################################
#													Menu TV Arquivo											 #
###############################################################################################################

def listatvarchive(url):
	endereco = url+"/panel_api.php?username="+__ADDON__.getSetting('login_name')+"&password="+__ADDON__.getSetting('login_password')+"&action=get_live_streams"
	iIiIIIi = urllib2.urlopen(endereco)
	ooo00OOOooO	= json.load(iIiIIIi)
	O00OOOoOoo0O = ooo00OOOooO['available_channels']
	for	O000OOo00oo	in	O00OOOoOoo0O.values():
		oo0OOo = O000OOo00oo['tv_archive']
		if(oo0OOo == 1):
			nametv=O000OOo00oo['name']
			stream_id=O000OOo00oo['stream_id']
			logo_tv=O000OOo00oo['stream_icon']
			duration = O000OOo00oo['tv_archive_duration']
			
			addLinkGrupo(nametv,logo_tv,stream_id,url,duration,os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv_arc.png'),1)
	
	vista_Grupos()

def listatvarchivecanais(name,stream_id,url,duration,iconimage,fanart):
	endereco = url+"/panel_api.php?username="+__ADDON__.getSetting('login_name')+"&password="+__ADDON__.getSetting('login_password')+"&action=get_epg&stream_id="+stream_id
	iIiIIIi	=	urllib2	.urlopen(endereco)
	iiiI11	=	json.load(iIiIIIi)
	iiIiI	=	datetime.datetime.utcnow() - datetime.timedelta(days=int(duration))
	o00oooO0Oo	=calendar.timegm(iiIiI.timetuple())
	o00oooO0Oo	=int(o00oooO0Oo)
	o0O0OOO0Ooo	=time.time()
	o0O0OOO0Ooo	=int(o0O0OOO0Ooo)
	
	for	iiIiII1	in	iiiI11	:
		title_tv = iiIiII1['title']
		title_tv=base64.b64decode(title_tv)
		start	= int(iiIiII1['start'])
		end	= int(iiIiII1['end'])
		segundo = 0.0166666667
		
		duracao = int((end-start)*segundo)
		
		if(start > o00oooO0Oo and start < o0O0OOO0Ooo):
			if 90 - 90:	Ooo0	%	Oo0ooO0oo0oO	/	Oo0oO0ooo
			IIi = datetime.datetime.fromtimestamp(int(start)).strftime('%d.%m %H:%M')
			i1Iii1i1I = datetime.datetime.fromtimestamp(int(start)).strftime('%Y-%m-%d:%H:%M')
			title_tv = IIi + " " + title_tv
			endereco = url+"/streaming/timeshift.php?username="+__ADDON__.getSetting('login_name')+"&password="+__ADDON__.getSetting('login_password')+"&stream="+stream_id+"&start="+i1Iii1i1I+"&duration="+str(duracao)
			
			addLinkCanal(title_tv,endereco,iconimage,'0001','')
	
	vista_Canais()

def addLinkGrupo(title,thumbnail,stream_id,url,duration,fanart,type):
	ok=True
	
	listitem=xbmcgui.ListItem(title,iconImage=thumbnail,thumbnailImage=thumbnail)
	info_labels={"Title":title,"FileName":title}
	listitem.setInfo( "video", info_labels )
	listitem.setProperty('fanart_image',fanart)
	xbmcplugin.setPluginFanart(int(sys.argv[1]),fanart)
	
	u = sys.argv[0] + "?url=" + str(url) + "&mode=7&name=" + str(title) + "&iconimage="+str(thumbnail)+"&fanart="+str(fanart)+"&stream_id="+str(stream_id)+"&duration="+duration
	
	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=listitem,isFolder=True)
	
	return ok

###############################################################################################################
#													Abrir Setting										 #
###############################################################################################################

def abrirDefinincoes():
	__ADDON__.openSettings()
	vista_menu()

################################
###		Clear Cache		###
################################

def CLEARCACHE():
	xbmc_cache_path = os.path.join(xbmc.translatePath('special://home'), 'cache')
	if os.path.exists(xbmc_cache_path)==True:	
		for root, dirs, files in os.walk(xbmc_cache_path):
			file_count = 0
			file_count += len(files)
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar Cache no XBMC.", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						try:
							os.unlink(os.path.join(root, f))
						except:
							pass
					for d in dirs:
						try:
							shutil.rmtree(os.path.join(root, d))
						except:
							pass
						
			else:
				pass
	if xbmc.getCondVisibility('system.platform.ATV2'):
		atv2_cache_a = os.path.join('/private/var/mobile/Library/Caches/AppleTV/Video/', 'Other')
		
		for root, dirs, files in os.walk(atv2_cache_a):
			file_count = 0
			file_count += len(files)
		
			if file_count > 0:

				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar ficheiros ATV2.", str(file_count) + " ficheiros encontrados em 'Outros'", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
		atv2_cache_b = os.path.join('/private/var/mobile/Library/Caches/AppleTV/Video/', 'LocalAndRental')
		
		for root, dirs, files in os.walk(atv2_cache_b):
			file_count = 0
			file_count += len(files)
		
			if file_count > 0:

				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar ficheiros ATV2.", str(file_count) + " ficheiros encontrados em 'Local'", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
			  # Set path to Cydia Archives cache files
							 

	# Set path to What th Furk cache files
	wtf_cache_path = os.path.join(xbmc.translatePath('special://profile/addon_data/plugin.video.whatthefurk/cache'), '')
	if os.path.exists(wtf_cache_path)==True:	
		for root, dirs, files in os.walk(wtf_cache_path):
			file_count = 0
			file_count += len(files)
		
		# Count files and give option to delete
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar a cache WTF.", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
				
				# Set path to 4oD cache files
	channel4_cache_path= os.path.join(xbmc.translatePath('special://profile/addon_data/plugin.video.4od/cache'), '')
	if os.path.exists(channel4_cache_path)==True:	
		for root, dirs, files in os.walk(channel4_cache_path):
			file_count = 0
			file_count += len(files)
		
		# Count files and give option to delete
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar ficheiros 4oD em cache.", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
				
				# Set path to BBC iPlayer cache files
	iplayer_cache_path= os.path.join(xbmc.translatePath('special://profile/addon_data/plugin.video.iplayer/iplayer_http_cache'), '')
	if os.path.exists(iplayer_cache_path)==True:	
		for root, dirs, files in os.walk(iplayer_cache_path):
			file_count = 0
			file_count += len(files)
		
		# Count files and give option to delete
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar ficheiros BBC iPlayer em cache.", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
				
				
				# Set path to Simple Downloader cache files
	downloader_cache_path = os.path.join(xbmc.translatePath('special://profile/addon_data/script.module.simple.downloader'), '')
	if os.path.exists(downloader_cache_path)==True:	
		for root, dirs, files in os.walk(downloader_cache_path):
			file_count = 0
			file_count += len(files)
		
		# Count files and give option to delete
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar ficheiros Simple Downloader em cache.", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
	
	itv_cache_path = os.path.join(xbmc.translatePath('special://profile/addon_data/plugin.video.itv/Images'), '')
	if os.path.exists(itv_cache_path)==True:	
		for root, dirs, files in os.walk(itv_cache_path):
			file_count = 0
			file_count += len(files)
			
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Apagar items em cache", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros em cache?"):
				
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
						
			else:
				pass
	dialog = xbmcgui.Dialog()
	dialog.ok(AddonTitle, "		Cache apagada com sucesso!")


################################
###	 Purge Packages		###
################################

def PURGEPACKAGES():
	packages_cache_path = xbmc.translatePath(os.path.join('special://home/addons/packages', ''))
	try:	
		for root, dirs, files in os.walk(packages_cache_path):
			file_count = 0
			file_count += len(files)
			
			if file_count > 0:
	
				dialog = xbmcgui.Dialog()
				if dialog.yesno("Excluir informação em Cache.", str(file_count) + " ficheiros encontrados.", "Quer apagar todos os ficheiros?"):
							
					for f in files:
						os.unlink(os.path.join(root, f))
					for d in dirs:
						shutil.rmtree(os.path.join(root, d))
					dialog = xbmcgui.Dialog()
					dialog.ok(AddonTitle, "		Kodi limpo com sucesso.")
				else:
						pass
			else:
				dialog = xbmcgui.Dialog()
				dialog.ok(AddonTitle, "		Não foram encontrados ficheiros a apagar.")
	except: 
		dialog = xbmcgui.Dialog()
		dialog.ok(AddonTitle, "Erro ao tentar apagar ficheiros em cache.")

############################################################################################################
#												Addon Filmes e Series									  #
############################################################################################################

def listamenusseries(nome_nov,url,iconimage,fanart):
	check_login = login2()
	if check_login == True:
		menuSeries(iconimage,fanart)
	else:
		__ALERTA__(AddonTitle, 'Erro a fazer login nesta parte. Tente novamente mais tarde.')

def listamenusfilmes(nome_nov,url,iconimage,fanart):
	check_login = login2()
	if check_login == True:
		database = Database.isExists()
		addDir('Filmes da Lista',url,4,'Miniatura',iconimage,'filmes',fanart)	
		menuFilmes(iconimage,fanart)
	else:
		__ALERTA__(AddonTitle, 'Erro a fazer login nesta parte. Tente novamente mais tarde.')

def listamenusanimes(nome_nov,url,iconimage,fanart):
	check_login = login2()
	if check_login == True:
		menuAnimes(iconimage,fanart)
	else:
		__ALERTA__(AddonTitle, 'Erro a fazer login nesta parte. Tente novamente mais tarde.')

def menuFilmes(iconimage,fanart):
	evento = getEventos()
	if evento:
		addDir2('[B]'+evento+'[/B]', __API_SITE__+'evento/1', 111, 'filmes', iconimage, 1, None, None, fanart)
		addDir2(' ', '', 0, '', os.path.join(__ART_FOLDER__, __SKIN__, 'nada.png'), 1, None, None, fanart)
	addDir2('Todos os Filmes', __API_SITE__+'filmes', 111, 'filmes', iconimage, 1, None, None, fanart)
	addDir2('Filmes em Destaque',  __API_SITE__+'filmes/destaque', 111, 'filmes', iconimage, 1, None, None, fanart)
	addDir2('Filmes por Ano', __API_SITE__+'filmes/ano', 119, 'listagemAnos', iconimage, 1, None, None, fanart)
	addDir2('Filmes por Genero', __API_SITE__+'filmes/categoria', 118, 'listagemGeneros', iconimage, 1, None, None, fanart)

	vista_menu()

def menuSeries(iconimage,fanart):
	database = Database.isExists()
	addDir2('Todas as Series', __API_SITE__+'series', 123, 'series', iconimage, 1, None, None, fanart)
	addDir2('Series em Destaque',  __API_SITE__+'series/destaque', 123, 'series', iconimage, 1, None, None, fanart)
	addDir2('Series por Ano', __API_SITE__+'series/ano', 119, 'listagemAnos', iconimage, 1, None, None, fanart)
	addDir2('Series por Genero', __API_SITE__+'series/categoria', 118, 'listagemGeneros', iconimage, 1, None, None, fanart)

	vista_menu()

def menuAnimes(iconimage,fanart):
	database = Database.isExists()
	addDir2('Todos os Animes', __API_SITE__+'animes', 123, 'animes', iconimage, 1, None, None, fanart)
	addDir2('Animes em Destaque',  __API_SITE__+'animes/destaque', 123, 'animes', iconimage, 1, None, None, fanart)
	addDir2('Animes por Ano', __API_SITE__+'animes/ano', 119, 'listagemAnos', iconimage, 1, None, None, fanart)
	addDir2('Animes por Genero', __API_SITE__+'animes/categoria', 118, 'listagemGeneros', iconimage, 1, None, None, fanart)

	vista_menu()

def removerAcentos(txt, encoding='utf-8'):
	return normalize('NFKD', txt.decode(encoding)).encode('ASCII','ignore')

def filmes(url, pagina):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultado = json.loads(resultado)
	for i in resultado['data']:
		categoria = i['categoria1']
		if i['categoria2'] != '':
			categoria += ','+i['categoria2']
		if i['categoria3'] != '':
			categoria += ','+i['categoria3']
		visto = False
		pt = ''
		cor = "white"
		br = ''
		if 'Brasileiro' in categoria:
			br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
		if 'Portu' in categoria:
			pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
		if 'PT' in i['IMBD']:
			i['IMBD'] = re.compile('(.+?)PT').findall(i['IMBD'])[0]
			pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
		if i['visto'] == 1:
			visto = True

		infoLabels = {'Title': i['nome_ingles'], 'Year': i['ano'], 'Genre': categoria, 'Plot': i['descricao_video'], 'Cast':i['atores'].split(','), 'Trailer': i['trailer'], 'Director': i['diretor'], 'Rating': i['imdbRating'], 'IMDBNumber': i['IMBD'] }
		
		try:
			nome = i['nome_ingles'].decode('utf-8')
		except:
			nome = i['nome_ingles'].encode('utf-8')
		if 'http' not in i['foto']:
			i['foto'] = __API__+'images/capas/'+i['foto'].split('/')[-1]
			#i['foto'] = i['foto'].replace('PT','')
		
		nomeee = '[COLOR '+cor+']'+pt+br+removerAcentos(nome)+' ('+i['ano']+')[/COLOR]'
		urlnoo = __API_SITE__+'filme/'+str(i['id_video'])
		fotooo = i['foto']
		#i['background'] = i['background'].replace('PT','')
		i['background'] = 'images/background/'+i['IMBD']+'.jpg'
		fanarttt = __API__+i['background']
		addVideo(nomeee, urlnoo, 113, fotooo,visto, 'filme', 0, 0, infoLabels, fanarttt, trailer=i['trailer'])
		
	current = resultado['meta']['pagination']['current_page']
	total = resultado['meta']['pagination']['total_pages']
	try: proximo = resultado['meta']['pagination']['links']['next']
	except: pass 
	if current < total:
		addDir2('Próxima página ('+str(current)+'/'+str(total)+')', proximo, 111, 'filmes', os.path.join(__ART_FOLDER__, __SKIN__, 'proximo.png'),1)
	vista_filmesSeries()

def series(url):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultado = json.loads(resultado)
	if 'serie' in url:
		tipo = 'serie'
	elif 'anime' in url:
		tipo = 'anime'
	for i in resultado['data']:
		categoria = i['categoria1']
		if i['categoria2'] != '':
			categoria += ','+i['categoria2']
		if i['categoria3'] != '':
			categoria += ','+i['categoria3']
		br = ''
		pt = ''
		if 'Brasileiro' in categoria:
			br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
		if 'Portu' in categoria:
			pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
		if 'PT' in i['IMBD']:
			pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
		infoLabels = {'Title': i['nome_ingles'], 'Year': i['ano'], 'Genre': categoria, 'Plot': i['descricao_video'], 'Cast':i['atores'].split(','), 'Trailer': i['trailer'], 'Director': i['diretor'], 'Rating': i['imdbRating'], 'Code': i['IMBD'] }
	
		try:
			nome = i['nome_ingles'].decode('utf-8')
		except:
			nome = i['nome_ingles'].encode('utf-8')
		if 'http' not in i['foto']:
			i['foto'] = __API__+'images/capas/'+i['foto'].split('/')[-1]
			#i['foto'] = i['foto'].replace('PT','')
		if i['visto'] == 1:
			visto=True
		else:
			visto=False
		
		
		nomeee = pt+br+removerAcentos(nome)+' ('+i['ano']+')'
		fotooo = i['foto']
		#i['background'] = i['background'].replace('PT','')
		i['background'] = 'images/background/'+i['IMBD']+'.jpg'
		fanarttt = __API__+i['background']
		addDir2(nomeee, __API_SITE__+tipo+'/'+str(i['id_video']), 114, 'temporadas', fotooo, tipo='serie', infoLabels=infoLabels,poster=fanarttt,visto=visto)
	
	current = resultado['meta']['pagination']['current_page']
	total = resultado['meta']['pagination']['total_pages']
	try: proximo = resultado['meta']['pagination']['links']['next']
	except: pass 
	if current < total:
		addDir2('Proxima pagina ('+str(current)+'/'+str(total)+')', proximo, 123, 'series', os.path.join(__ART_FOLDER__, __SKIN__, 'proximo.png'))
	
	vista_filmesSeries()

def getSeasons(url):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultado = json.loads(resultado)
	j=1
	while j <= resultado['temporadas']:
		addDir2("[B]Temporada[/B] "+str(j), url+'/temporada/'+str(j), 115, 'episodios', os.path.join(__ART_FOLDER__, __SKIN__,'temporadas', 'temporada'+str(j)+'.png'),poster=__API__+resultado['background'])
		j+=1
	
	vista_temporadas()

def getEpisodes(url):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultado = json.loads(resultado)
	if 'serie' in url:
		tipo = 'serie'
	elif 'anime' in url:
		tipo = 'anime'
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultadoS = abrir_url(__API_SITE__+tipo+'/'+url.split('/')[5], header=headers)
	resultadoS = json.loads(resultadoS)
	for i in resultado['data']:
		if i['URL'] == '' and i['URL2'] == '':
			continue
		pt = ''
		categoria = resultadoS['categoria1']
		if resultadoS['categoria2'] != '':
			categoria += ','+resultadoS['categoria2']
		if resultadoS['categoria3'] != '':
			categoria += ','+resultadoS['categoria3']
		infoLabels = {'Title': i['nome_episodio'], 'Code': i['IMBD'], 'Episode': i['episodio'], 'Season': i['temporada'] }
		try:
			nome = i['nome_episodio'].decode('utf-8')
		except:
			nome = i['nome_episodio'].encode('utf-8')
		br = ''
		final = ''
		semLegenda = ''
		if i['fimtemporada'] == 1:
			final = '[B]Final da Temporada [/B]'
		if i['semlegenda'] == 1:
			semLegenda = '[COLOR red][B]S/ LEGENDA [/B][/COLOR]'
		if 'Brasileiro' in categoria:
			br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
		if 'Portu' in categoria:
			pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
		if 'PT' in i['IMBD']:
			i['IMBD'] = re.compile('(.+?)PT').findall(i['IMBD'])[0]
			pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
		visto = False
		cor = 'white'
		if i['visto'] == 1:
			visto = True	
		
		imagem = ''
		if i['imagem'] == 1:
			imagem = __API__+'images/series/'+i['IMBD']+'.jpg'
		elif i['imagem'] == 0:
			imagem = __API__+'images/capas/'+i['imdbSerie']+'.jpg'
		
		#imagem = imagem.replace('PT','')
		#i['background'] = i['background'].replace('PT','')
		i['background'] = 'images/background/'+i['IMBD']+'.jpg'
		fanarttt = __API__+i['background']
		
		nomeee = pt+br+final+semLegenda+'[COLOR '+cor+'][B]Episodio '+str(i['episodio'])+'[/B][/COLOR] '+removerAcentos(nome)
		
		addVideo(nomeee, __API_SITE__+tipo+'/'+str(i['id_serie'])+'/episodio/'+str(i['id_episodio']), 113, imagem, visto, 'episodio', i['temporada'], i['episodio'], infoLabels, fanarttt)
	
	vista_episodios()

def getGeneros(url):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(__API_SITE__+'categorias', header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultado = json.loads(resultado)

	for i in resultado:
		if i['id_categoria'] == 0:
			continue
		if 'filme' not in url and i['tipo'] == 1:
			continue
		addDir2(i['categorias'], url+'/'+str(i['id_categoria']), 122, 'categorias', os.path.join(__ART_FOLDER__, __SKIN__, 'ico_vid.png'))
	
	vista_menu()

def categorias(url):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultadoa = json.loads(resultado)
	
	for i in resultadoa["data"]:
		if 'filme' in url:
			resultado = abrir_url(__API_SITE__+'filme/'+str(i['id_video']), header=headers)
			resultado = json.loads(resultado)
			categoria = resultado['categoria1']
			if resultado['categoria2'] != '':
				categoria += ','+resultado['categoria2']
			if resultado['categoria3'] != '':
				categoria += ','+resultado['categoria3']
			
			try:
				nome = resultado['nome_ingles'].decode('utf-8')
			except:
				nome = resultado['nome_ingles'].encode('utf-8')
			if 'http' not in resultado['foto']:
				resultado['foto'] = __API__+'images/capas/'+resultado['foto'].split('/')[-1]
			pt = ''
			br = ''
			if 'Brasileiro' in categoria:
				br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
			if 'Portu' in categoria:
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			cor = "white"
			if 'PT' in resultado['IMBD']:
				resultado['IMBD'] = re.compile('(.+?)PT').findall(resultado['IMBD'])[0]
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			visto = False
			
			infoLabels = {'Title': resultado['nome_ingles'], 'Year': resultado['ano'], 'Genre': categoria, 'Plot':resultado['descricao_video'], 'Cast':resultado['atores'].split(','), 'Trailer': resultado['trailer'], 'Director': resultado['diretor'], 'Rating': resultado['imdbRating'], 'IMDBNumber': resultado['IMBD'] }
			nomeee = '[COLOR '+cor+']'+pt+br+removerAcentos(nome)+' ('+resultado['ano']+')[/COLOR]'
			urlnoo = __API_SITE__+'filme/'+str(resultado['id_video'])
			
			fotooo = resultado['foto']
			#fotooo = fotooo.replace('PT','')
			#resultado['background'] = resultado['background'].replace('PT','')
			resultado['background'] = 'images/background/'+resultado['IMBD']+'.jpg'
			fanarttt = __API__+resultado['background']
			
			addVideo(nomeee, urlnoo, 113, fotooo,visto, 'player', 0, 0, infoLabels, fanarttt, trailer=resultado['trailer'])
		elif 'serie' in url or 'anime' in url:
			cor = "white"
			if 'serie' in url:
				tipo = 'serie'
			elif 'anime' in url:
				tipo = 'anime'
			resultado = abrir_url(__API_SITE__+tipo+'/'+str(i['id_video']), header=headers)
			resultado = json.loads(resultado)
			categoria = resultado['categoria1']
			if resultado['categoria2'] != '':
				categoria += ','+resultado['categoria2']
			if resultado['categoria3'] != '':
				categoria += ','+resultado['categoria3']
			pt = ''
			br = ''
			if 'Brasileiro' in categoria:
				br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
			if 'Portu' in categoria:
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			if 'PT' in resultado['IMBD']:
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			try:
				nome = resultado['nome_ingles'].decode('utf-8')
			except:
				nome = resultado['nome_ingles'].encode('utf-8')
			if 'http' not in resultado['foto']:
				resultado['foto'] = __API_SITE__+'images/capas/'+resultado['foto'].split('/')[-1]
			visto = False
			if resultado['visto'] == 1:
				visto=True
			
			infoLabels = {'Title': resultado['nome_ingles'], 'Year': resultado['ano'], 'Genre': categoria, 'Plot': resultado['descricao_video'], 'Cast':resultado['atores'].split(','), 'Trailer': resultado['trailer'], 'Director': resultado['diretor'], 'Rating': resultado['imdbRating'], 'Code': resultado['IMBD'] }
			
			fotooo = resultado['foto']
			#fotooo = fotooo.replace('PT','')
			#resultado['background'] = resultado['background'].replace('PT','')
			resultado['background'] = 'images/background/'+resultado['IMBD']+'.jpg'
			fanarttt = __API__+resultado['background']
			
			nomeee = pt+br+removerAcentos(nome)+' ('+resultado['ano']+')'
			addDir2(nomeee, __API_SITE__+tipo+'/'+str(resultado['id_video']), 114, 'temporadas', fotooo, tipo='serie', infoLabels=infoLabels,poster=fanarttt,visto=visto)
	
	current = resultadoa['meta']['pagination']['current_page']
	total = resultadoa['meta']['pagination']['total_pages']
	try: proximo = resultadoa['meta']['pagination']['links']['next']
	except: pass 
	if current < total:
		addDir2('Próxima página ('+str(current)+'/'+str(total)+')', proximo, 121, 'anos', os.path.join(__ART_FOLDER__, __SKIN__, 'proximo.png'),1)
	
	vista_filmesSeries()

def getYears(url):
	anos = [
			'2017',
			'2016',
			'2015',
			'2014',
			'2013',
			'2012',
			'2011',
			'2010',
			'2009',
			'2008',
			'2007',
			'2006',
			'2000-2005',
			'1990-1999',
			'1980-1989',
			'1970-1979',
			'1960-1969',
			'1950-1959',
			'1900-1949'
		]
	for i in anos:
		addDir2(i, url+'/'+i, 121, 'anos', os.path.join(__ART_FOLDER__, __SKIN__, 'ico_vid.png'))
		
	vista_menu()

def anos(url):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	resultadoa = json.loads(resultado)
	
	for i in resultadoa["data"]:
		if 'filme' in url:
			resultado = abrir_url(__API_SITE__+'filme/'+str(i['id_video']), header=headers)
			resultado = json.loads(resultado)
			categoria = resultado['categoria1']
			if resultado['categoria2'] != '':
				categoria += ','+resultado['categoria2']
			if resultado['categoria3'] != '':
				categoria += ','+resultado['categoria3']
			
			visto = False
			pt = ''
			br = ''
			if 'Brasileiro' in categoria:
				br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
			if 'Portu' in categoria:
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			cor = "white"
			if 'PT' in i['IMBD']:
				i['IMBD'] = re.compile('(.+?)PT').findall(i['IMBD'])[0]
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			if i['visto'] == 1:
				visto = True
			
			try:
				nome = resultado['nome_ingles'].decode('utf-8')
			except:
				nome = resultado['nome_ingles'].encode('utf-8')
			if 'http' not in resultado['foto']:
				resultado['foto'] = __API__+'images/capas/'+resultado['foto'].split('/')[-1]
	
			infoLabels = {'Title': resultado['nome_ingles'], 'Year': resultado['ano'], 'Genre': categoria, 'Plot':resultado['descricao_video'], 'Cast':resultado['atores'].split(','), 'Trailer': resultado['trailer'], 'Director': resultado['diretor'], 'Rating': resultado['imdbRating'], 'IMDBNumber': resultado['IMBD'] }
			nomeee = '[COLOR '+cor+']'+pt+br+removerAcentos(nome)+' ('+i['ano']+')[/COLOR]'
			urlnoo = __API_SITE__+'filme/'+str(resultado['id_video'])
			
			fotooo = resultado['foto']
			fotooo = fotooo.replace('PT','')
			resultado['background'] = resultado['background'].replace('PT','')
			fanarttt = __API__+resultado['background']
			
			addVideo(nomeee, urlnoo, 113, fotooo,visto, 'player', 0, 0, infoLabels, fanarttt, trailer=resultado['trailer'])
		elif 'serie' in url or 'anime' in url:
			cor = "white"
			if 'serie' in url:
				tipo = 'serie'
			elif 'anime' in url:
				tipo = 'anime'
			resultado = abrir_url(__API_SITE__+tipo+'/'+str(i['id_video']), header=headers)
			resultado = json.loads(resultado)
			categoria = resultado['categoria1']
			if resultado['categoria2'] != '':
				categoria += ','+resultado['categoria2']
			if resultado['categoria3'] != '':
				categoria += ','+resultado['categoria3']
			pt=''
			br = ''
			if 'Brasileiro' in categoria:
				br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
			if 'Portu' in categoria:
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			if 'PT' in resultado['IMBD']:
				pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
			try:
				nome = resultado['nome_ingles'].decode('utf-8')
			except:
				nome = resultado['nome_ingles'].encode('utf-8')
			if 'http' not in resultado['foto']:
				resultado['foto'] = __API__+'images/capas/'+resultado['foto'].split('/')[-1]
			if resultado['visto'] == 1:
				visto=True
			else:
				visto=False
			infoLabels = {'Title': resultado['nome_ingles'], 'Year': resultado['ano'], 'Genre': categoria, 'Plot': resultado['descricao_video'], 'Cast':resultado['atores'].split(','), 'Trailer': resultado['trailer'], 'Director': resultado['diretor'], 'Rating': resultado['imdbRating'], 'Code': resultado['IMBD'] }
			
			fotooo = resultado['foto']
			fotooo = fotooo.replace('PT','')
			resultado['background'] = resultado['background'].replace('PT','')
			fanarttt = __API__+resultado['background']
			
			nomeee = pt+br+removerAcentos(nome)+' ('+i['ano']+')'
			addDir2(nomeee, __API_SITE__+tipo+'/'+str(resultado['id_video']), 114, 'temporadas', fotooo, tipo='serie', infoLabels=infoLabels,poster=fanarttt,visto=visto)
	
	current = resultadoa['meta']['pagination']['current_page']
	total = resultadoa['meta']['pagination']['total_pages']
	try: proximo = resultadoa['meta']['pagination']['links']['next']
	except: pass 
	if current < total:
		addDir2('Próxima página ('+str(current)+'/'+str(total)+')', proximo, 121, 'anos', os.path.join(__ART_FOLDER__, __SKIN__, 'proximo.png'),1)
	
	vista_filmesSeries()

def getEventos():
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	
	resultado = abrir_url(__API_SITE__+'eventos', header=headers)
	resultado = json.loads(resultado)
	try:
		if resultado['codigo'] == 204:
			return False
	except:
		pass
	return resultado['data']['nome']
		
		
def player(name,url,iconimage,temporada,episodio,serieNome):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	
	resultado = json.loads(resultado)
	infolabels = dict()

	pastaData = ''
	if 'filme' in url:
		infolabels['Code'] = resultado['IMBD']
		infolabels['Year'] = resultado['ano']
		idVideo = resultado['id_video']
		nome = resultado['nome_ingles']
		temporada = 0
		episodio = 0
	else:
		idVideo = resultado['id_serie']
		nome = resultado['nome_episodio']
		temporada = resultado['temporada']
		episodio = resultado['episodio']

	mensagemprogresso = xbmcgui.DialogProgress()
	mensagemprogresso.create(AddonTitle, u'Abrir emissão','Por favor aguarde...')
	mensagemprogresso.update(25, "", u'Obter video e legenda', "")

	stream, legenda, ext_g = getStreamLegenda(resultado)

	mensagemprogresso.update(50, "", u'Prepara-te, vai começar!', "")

	playlist = xbmc.PlayList(1)
	playlist.clear()
	listitem = xbmcgui.ListItem(name, iconImage="DefaultVideo.png", thumbnailImage=iconimage)

	listitem.setInfo(type="Video", infoLabels=infolabels)
	listitem.setProperty('mimetype', 'video/x-msvideo')
	listitem.setProperty('IsPlayable', 'true')
	
	listitem.setPath(path=stream)
	playlist.add(stream, listitem)
	xbmcplugin.setResolvedUrl(int(sys.argv[1]), True, listitem)
	mensagemprogresso.update(75, "", u'Boa Sessão!!!', "")

	if stream == False:
		__ALERTA__(AddonTitle, 'O servidor escolhido não disponível, escolha outro ou tente novamente mais tarde.')
	else:
		#__ALERTA__(AddonTitle, 'Stream: '+stream)
		player_mr = Player.Player(url=url, idFilme=idVideo, pastaData=__PASTA_DADOS__, temporada=temporada, episodio=episodio, nome=name, logo=os.path.join(__ADDON_FOLDER__,'icon.png'))
		
		mensagemprogresso.close()
		player_mr.play(playlist)
		player_mr.setSubtitles(legenda)

		while player_mr.playing:
			xbmc.sleep(5000)
			#player_mr.trackerTempo()

def getStreamLegenda(resultado):
	i = 0
	servidores = []
	titulos = []
	if resultado['URL'] != '':
		i+=1
		servidores.append(resultado['URL'])
		if 'openload' in resultado['URL']:
			nome = "OpenLoad"
		elif 'vidzi' in resultado['URL']:
			nome = 'Vidzi'
		elif 'google' in resultado['URL'] or 'cloud.mail.ru' in resultado['URL']:
			nome = AddonTitle
		elif 'uptostream.com' in resultado['URL']:
			nome = 'UpToStream'
		elif 'rapidvideo.com' in resultado['URL'] or 'raptu' in resultado['URL']:
			nome = 'RapidVideo'
		titulos.append('Servidor #%s: %s' % (i, nome))
	if resultado['URL2'] != '':
		i+=1
		servidores.append(resultado['URL2'])
		if 'openload' in resultado['URL2']:
			nome = "OpenLoad"
		elif 'vidzi' in resultado['URL2']:
			nome = 'Vidzi'
		elif 'google' in resultado['URL2'] or 'cloud.mail.ru' in resultado['URL2']:
			nome = AddonTitle
		elif 'uptostream.com' in resultado['URL2']:
			nome = 'UpToStream'
		elif 'rapidvideo.com' in resultado['URL2'] or 'raptu' in resultado['URL2']:
			nome = 'RapidVideo'
		titulos.append('Servidor #%s: %s' % (i, nome))
	try:
		if resultado['URL3'] != '':
			i+=1
			servidores.append(resultado['URL3'])
			if 'openload' in resultado['URL3']:
				nome = "OpenLoad"
			elif 'vidzi' in resultado['URL3']:
				nome = 'Vidzi'
			elif 'google' in resultado['URL3'] or 'cloud.mail.ru' in resultado['URL3']:
				nome = AddonTitle
			elif 'uptostream.com' in resultado['URL3']:
				nome = 'UpToStream'
			elif 'rapidvideo.com' in resultado['URL3'] or 'raptu' in resultado['URL3']:
				nome = 'RapidVideo'
			titulos.append('Servidor #%s: %s' % (i, nome))
	except:
		pass
	try:
		if resultado['URL4'] != '':
			i+=1
			servidores.append(resultado['URL4'])
			if 'openload' in resultado['URL4']:
				nome = "OpenLoad"
			elif 'vidzi' in resultado['URL4']:
				nome = 'Vidzi'
			elif 'google' in resultado['URL4'] or 'cloud.mail.ru' in resultado['URL4']:
				nome = AddonTitle
			elif 'uptostream.com' in resultado['URL4']:
				nome = 'UpToStream'
			elif 'rapidvideo.com' in resultado['URL4'] or 'raptu' in resultado['URL4']:
				nome = 'RapidVideo'
			titulos.append('Servidor #%s: %s' % (i, nome))
	except:
		pass
	legenda = ''
	stream = ''
	if '://' in resultado['legenda'] or resultado['legenda'] == '':
		legenda = __API__+'subs/%s.srt' % resultado['IMBD']
	elif resultado['legenda'] != '':
		if not '.srt' in resultado['legenda']:
			resultado['legenda'] = resultado['legenda']+'.srt'
		legenda = __API__+'subs/%s' % resultado['legenda']
	try:
		if resultado['semlegenda'] == 1:
			legenda = ''
	except:
		pass
	ext_g = 'coiso'
	legendaAux = legenda
	servidor = 0
	if len(titulos) > 1:
		servidor = xbmcgui.Dialog().select('Escolha o servidor', titulos)
	else:
		servidor = 0
	
	if 'vidzi' in servidores[servidor]:
		vidzi = URLResolverMedia.Vidzi(servidores[servidor])
		stream = vidzi.getMediaUrl()
		legenda = vidzi.getSubtitle()
	elif 'uptostream.com' in servidores[servidor]:
		stream = URLResolverMedia.UpToStream(servidores[servidor]).getMediaUrl()
	elif 'server.mrpiracy.win' in servidores[servidor]:
		stream = servidores[servidor]
	elif 'openload' in servidores[servidor]:
		stream = URLResolverMedia.OpenLoad(servidores[servidor]).getMediaUrl()
		legenda = URLResolverMedia.OpenLoad(servidores[servidor]).getSubtitle()
		if not '.vtt' in legenda:
			legenda = legendaAux
	elif 'drive.google.com/' in servidores[servidor]:
		stream, ext_g = URLResolverMedia.GoogleVideo(servidores[servidor]).getMediaUrl()
	elif 'cloud.mail.ru' in servidores[servidor]:
		stream, ext_g = URLResolverMedia.CloudMailRu(servidores[servidor]).getMediaUrl()
	elif 'rapidvideo.com' in servidores[servidor] or 'raptu' in servidores[servidor]:
		rapid = URLResolverMedia.RapidVideo(servidores[servidor])
		stream = rapid.getMediaUrl()
		legenda = rapid.getLegenda()
	
	return stream, legenda, ext_g


def pesquisa(url):
	codigo_fonte = ''
	dados = ''
	net = Net()
	net.set_cookies(__COOKIE_FILE__)
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	tabela = ''
	strPesquisa = ''
	ficheiro = ''
	if 'filmes' in url:
		ficheiro = os.path.join(__PASTA_DADOS__,'filmes_pesquisa.liveit')
		tipo = 0
	elif 'series' in url:
		ficheiro = os.path.join(__PASTA_DADOS__,'series_pesquisa.liveit')
		tipo = 1
	elif 'animes' in url:
		ficheiro = os.path.join(__PASTA_DADOS__,'animes_pesquisa.liveit')
		tipo = 2
	
	if 'page' not in url:
		#tipo = xbmcgui.Dialog().select(u'Onde quer pesquisar?', ['Filmes', 'Series', 'Animes', 'Canais', 'Praias', 'Rádios'])
		tipo = xbmcgui.Dialog().select(u'Onde quer pesquisar?', ['Filmes', 'Series', 'Animes'])
		teclado = xbmc.Keyboard('', 'O que quer pesquisar?')
		if tipo == 0:
			url = __API_SITE__+'filmes/pesquisa'
			ficheiro = os.path.join(__PASTA_DADOS__,'filmes_pesquisa.liveit')
		elif tipo == 1:
			url = __API_SITE__+'series/pesquisa'
			ficheiro = os.path.join(__PASTA_DADOS__,'series_pesquisa.liveit')
		elif tipo == 2:
			url = __API_SITE__+'animes/pesquisa'
			ficheiro = os.path.join(__PASTA_DADOS__,'animes_pesquisa.liveit')
		elif tipo == 3 or  tipo == 4 or tipo == 5:
			url = __SITEBD__+'search.php'
			if tipo == 3:
				tabela = 'canais_kodi'
				ficheiro = os.path.join(__PASTA_DADOS__,'canais.liveit')
			elif tipo == 4:
				tabela = 'praias_kodi'
				ficheiro = os.path.join(__PASTA_DADOS__,'praias.liveit')
			elif tipo == 5:
				tabela = 'radios_kodi'
				ficheiro = os.path.join(__PASTA_DADOS__,'radios.liveit')
			else:
				tabela = 'programas_kodi'
				ficheiro = os.path.join(__PASTA_DADOS__,'programas.liveit')
		
		if ficheiro != '':
			if xbmcvfs.exists(ficheiro):
				f = open(ficheiro, "r")
				texto = f.read()
				teclado.setDefault(texto)
			teclado.doModal()

		if teclado.isConfirmed():
			strPesquisa = teclado.getText()
			dados = {'pesquisa': strPesquisa}
			try:
				f = open(ficheiro, mode="w")
				f.write(strPesquisa)
				f.close()
			except:
				traceback.print_exc()
				__ALERTA__(AddonTitle, 'Não gravou o conteudo em '+ficheiro)
			
			if strPesquisa == '':
				__ALERTA__(AddonTitle, 'Insira algo na pesquisa.')
				addDir2('Alterar Pesquisa', 'url', 7000, '', os.path.join(__ART_FOLDER__, __SKIN__, 'pesquisa.png'), 0)
			else:
				resultado = abrir_url(url,post=json.dumps(dados), header=headers)
	else:
		if ficheiro != '':
			if xbmcvfs.exists(ficheiro):
				f = open(ficheiro, "r")
				texto = f.read()
			dados = {'pesquisa': texto}
			resultado = abrir_url(url,post=json.dumps(dados), header=headers)
	
	if strPesquisa != '':
		if resultado == 'DNS':
			__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
			return False
		
		resultado = json.loads(resultado)
		if resultado['data'] != '':
			if tipo == 0:
				for i in resultado['data']:
					categoria = i['categoria1']
					if i['categoria2'] != '':
						categoria += ','+i['categoria2']
					if i['categoria3'] != '':
						categoria += ','+i['categoria3']
					infoLabels = {'Title': i['nome_ingles'], 'Year': i['ano'], 'Genre': categoria, 'Plot': i['descricao_video'], 'Cast':i['atores'].split(','), 'Trailer': i['trailer'], 'Director': i['diretor'], 'Rating': i['imdbRating'], 'IMDBNumber': i['IMBD'] }				
					try:
						nome = i['nome_ingles'].decode('utf-8')
					except:
						nome = i['nome_ingles'].encode('utf-8')
					pt = ''
					br = ''
					if 'Brasileiro' in categoria:
						br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
					if 'Portu' in categoria:
						pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
					cor = "white"
					if 'http' not in i['foto']:
						i['foto'] = __API__+'images/capas/'+i['foto'].split('/')[-1]
					if 'PT' in i['IMBD']:
						i['IMBD'] = re.compile('(.+?)PT').findall(i['IMBD'])[0]
						pt = '[B]PT: [/B]'
					visto = False
					
					nomeee = pt+removerAcentos(nome)+' ('+i['ano']+')'
					urlnoo = __API_SITE__+'filme/'+str(i['id_video'])
					fotooo = i['foto']
					fanarttt = __API__+i['background']
					addVideo(nomeee, urlnoo, 113, fotooo,visto, 'filme', 0, 0, infoLabels, fanarttt, trailer=i['trailer'])
			elif tipo == 1 or tipo == 2:
				for i in resultado['data']:
					categoria = i['categoria1']
					if i['categoria2'] != '':
						categoria += ','+i['categoria2']
					if i['categoria3'] != '':
						categoria += ','+i['categoria3']
					pt = ''
					br = ''
					if 'Brasileiro' in categoria:
						br = '[B][COLOR green]B[/COLOR][COLOR yellow]R[/COLOR]: [/B]'
					if 'Portu' in categoria:
						pt = '[B][COLOR green]P[/COLOR][COLOR red]T[/COLOR]: [/B]'
					infoLabels = {'Title': i['nome_ingles'], 'Year': i['ano'], 'Genre': categoria, 'Plot': i['descricao_video'], 'Cast':i['atores'].split(','), 'Trailer': i['trailer'], 'Director': i['diretor'], 'Rating': i['imdbRating'], 'Code': i['IMBD'] }
					cor = "white"
					if 'PT' in i['IMBD']:
						i['IMBD'] = re.compile('(.+?)PT').findall(i['IMBD'])[0]
						pt = '[B]PT: [/B]'
					try:
						nome = i['nome_ingles'].decode('utf-8')
					except:
						nome = i['nome_ingles'].encode('utf-8')
					if 'http' not in i['foto']:
						i['foto'] =__API__+'images/capas/'+i['foto'].split('/')[-1]
					if tipo == 1:
						link = 'serie'
					elif tipo == 2:
						link = 'anime'
					visto=False	
					nomeee = pt+removerAcentos(nome)+' ('+i['ano']+')'
					urlnoo = __API_SITE__+link+'/'+str(i['id_video'])
					fotooo = i['foto']
					fanarttt = __API__+i['background']
					addDir2(nomeee, urlnoo, 114, 'temporadas', fotooo, tipo='serie', infoLabels=infoLabels,poster=fanarttt,visto=visto)

			current = resultado['meta']['pagination']['current_page']
			total = resultado['meta']['pagination']['total_pages']
			try: proximo = resultado['meta']['pagination']['links']['next']
			except: pass 
			if current < total:
				addDir2('Proxima pagina ('+str(current)+'/'+str(total)+')', proximo, 120, 'pesquisa', os.path.join(__ART_FOLDER__, __SKIN__, 'proximo.png'))
			else:
				xbmcplugin.endOfDirectory(int(sys.argv[1]),cacheToDisc=False)
			vista_filmesSeries()
			


def download(url,name, temporada,episodio,serieNome):
	headers['Authorization'] = 'Bearer %s' % __ADDON__.getSetting('tokenMrpiracy')
	links = url.split('/')
	if 'filme' in url:
		id_video = links[-1]
		tipo = 0
	elif 'serie' in url:
		id_video = links[5]
		temporada = links[7]
		episodio = links[-1]
		tipo = 1
	elif 'anime' in url:
		id_video = links[5]
		temporada = links[7]
		episodio = links[-1]
		tipo = 2

	resultado = abrir_url(url, header=headers)
	if resultado == 'DNS':
		__ALERTA__(AddonTitle, 'Tem de alterar os DNS para poder usufruir do addon.')
		return False
	
	resultado = json.loads(resultado)

	stream, legenda, ext_g = getStreamLegenda(resultado)

	folder = xbmc.translatePath(__ADDON__.getSetting('pastaDownloads'))
	if(folder == 'Escolha a pasta para Download'):
		__ALERTA__(AddonTitle, 'Seleccione uma pasta primeiro no submenu Credênciais ou nas Configurações do Addon.')
	else:
		if tipo > 0:
			if tipo == 1:
				resultadoa = abrir_url(__API_SITE__+'serie/'+id_video, header=headers)
			elif tipo == 2:
				resultadoa = abrir_url(__API_SITE__+'anime/'+id_video, header=headers)
			resultadoa = json.loads(resultadoa)
			if not xbmcvfs.exists(os.path.join(folder,'series')):
				xbmcvfs.mkdirs(os.path.join(folder,'series'))
			if not xbmcvfs.exists(os.path.join(folder,'series',resultadoa['nome_ingles'])):
				xbmcvfs.mkdirs(os.path.join(folder,'series',resultadoa['nome_ingles']))
			if not xbmcvfs.exists(os.path.join(folder,'series',resultadoa['nome_ingles'],"Temporada "+str(temporada))):
				xbmcvfs.mkdirs(os.path.join(folder,'series',resultadoa['nome_ingles'],"Temporada "+str(temporada)))
			folder = os.path.join(folder, 'series', resultadoa['nome_ingles'], "Temporada", str(temporada))
			name = "e"+str(episodio)+" - "+clean(resultado['nome_episodio'])
		else:
			if not xbmcvfs.exists(os.path.join(folder,'filmes')):
				xbmcvfs.mkdirs(os.path.join(folder,'filmes'))
			folder = os.path.join(folder,'filmes')
			name = resultado['nome_ingles']

		streamAux = clean(stream.split('/')[-1])
		extensaoStream = clean(streamAux.split('.')[-1])

		if '?mim' in extensaoStream:
			extensaoStream = re.compile('(.+?)\?mime=').findall(extensaoStream)[0]

		if ext_g != 'coiso':
			extensaoStream = ext_g

		nomeStream = name+'.'+extensaoStream
		nomelegenda = ''
		Downloader.Downloader().download(os.path.join(folder.decode("utf-8"), nomeStream), stream, name)
		
		if legendasOn:
			legendaAux = clean(legenda.split('/')[-1])
			extensaoLegenda = clean(legendaAux.split('.')[1])
			nomeLegenda = name+'.'+extensaoLegenda
			download_legendas(legenda, os.path.join(folder, nomeLegenda))

def download_legendas(url,path):
	contents = abrir_url(url)
	if contents:
		fh = open(path, 'w')
		fh.write(contents)
		fh.close()
	return

def clean(text):
	command={'&#8220;':'"','&#8221;':'"', '&#8211;':'-','&amp;':'&','&#8217;':"'",'&#8216;':"'"}
	regex = re.compile("|".join(map(re.escape, command.keys())))
	return regex.sub(lambda mo: command[mo.group(0)], text)

def addVideo(name,url,mode,iconimage,visto,tipo,temporada,episodio,infoLabels,poster,trailer=False,serieNome=False):
	menu = []
	
	if infoLabels: infoLabelsAux = infoLabels
	else: infoLabelsAux = {'Title': name}

	if poster: posterAux = poster
	else: posterAux = iconimage
	
	try:
		name = name.encode('utf-8')
	except:
		name = name
	
	try:
		serieNome = serieNome.encode('utf-8')
	except:
		serieNome = serieNome
	else:
		pass

	fanart = __FANART__
	
	if tipo == 'filme':
		xbmcplugin.setContent(int(sys.argv[1]), 'Movies')
		if __ADDON__.getSetting('trailer-filmes') == 'true':
			try:
				idYoutube = trailer.split('?v=')[-1].split('/')[-1].split('?')[0].split('&')[0]
				linkTrailer = 'plugin://plugin.video.youtube/play/?video_id='+idYoutube
				#idYoutube=trailer.split('=')
				#__ALERTA__(AddonTitle, 'ID: '+idYoutube[1])
				#linkTrailer = 'plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid='+idYoutube[1]
				#linkTrailer = trailer
			except:
				linkTrailer = ''
		else:
			linkTrailer = ''
	elif tipo == 'serie':
		xbmcplugin.setContent(int(sys.argv[1]), 'tvshows')
		idIMDb = re.compile('imdb=(.+?)&').findall(url)[0]
		linkTrailer = ""
	elif tipo == 'episodio':
		xbmcplugin.setContent(int(sys.argv[1]), 'episodes')
		linkTrailer = ""
	else:
		xbmcplugin.setContent(int(sys.argv[1]), 'Movies')
		linkTrailer = ""
	
	overlay = 6
	playcount = 0

	infoLabelsAux["overlay"] = overlay
	infoLabelsAux["playcount"] = playcount
	
	liz=xbmcgui.ListItem(name, iconImage=iconimage, thumbnailImage=iconimage)
	liz.setInfo( type="Video", infoLabels=infoLabelsAux)
	liz.setProperty('fanart_image', poster)
	liz.setArt({'fanart': poster})
	
	
	if not serieNome:
		serieNome = ''

	u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)+"&temporada="+str(temporada)+"&episodio="+str(episodio)+"&name="+urllib.quote_plus(name)+"&iconimage="+urllib.quote_plus(iconimage)+"&serieNome="+urllib.quote_plus(serieNome)
	ok=True
	
	if linkTrailer != "":
		menu.append(('Ver Trailer', 'XBMC.PlayMedia(%s)' % (linkTrailer)))
		#menu.append(('Ver Trailer', 'XBMC.RunPlugin(%s?mode=105&name=%s&url=%s&iconimage=%s)'%(sys.argv[0],urllib.quote_plus(name), linkTrailer, urllib.quote_plus(iconimage))))
	
	menu.append(('Download', 'XBMC.RunPlugin(%s?mode=117&name=%s&url=%s&iconimage=%s&serieNome=%s&temporada=%s&episodio=%s)'%(sys.argv[0],urllib.quote_plus(name), urllib.quote_plus(url), urllib.quote_plus(iconimage), urllib.quote_plus(serieNome), str(temporada), str(episodio))))
	liz.addContextMenuItems(menu, replaceItems=True)
	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=False)
	return ok

###################################################################################
#								FUNCOES JA FEITAS								 #
###################################################################################
def abrirNada():
	xbmc.executebuiltin("Container.SetViewMode(51)")
	
def addDir(name,url,mode,estilo,iconimage,tipo,fanart,pasta=True,total=1):
	if(tipo == 'limparcache' and tipo == 'limpartudo'):				
		u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)
	else:
		u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)+"&estilo="+urllib.quote_plus(estilo)+"&fanart="+str(fanart)
	ok=True
	liz=xbmcgui.ListItem(name, iconImage=iconimage, thumbnailImage=iconimage)
	liz.setProperty('fanart_image', fanart)
	liz.setArt({'fanart': fanart})
	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=pasta,totalItems=total)
	return ok

def addDir2(name,url,mode,mode2,iconimage,pagina=1,tipo=None,infoLabels=None,poster=None,visto=False):
	if infoLabels: infoLabelsAux = infoLabels
	else: infoLabelsAux = {'Title': name}
	fanart = ''
	if poster: fanart = poster
	else: fanart = iconimage
	
	try:
		name = name.encode('utf-8')
	except:
		name = name

	u=sys.argv[0]+"?url="+urllib.quote_plus(url)+"&modo="+mode2+"&mode="+str(mode)+"&name="+urllib.quote_plus(name)
	
	ok=True

	#fanart = __FANART__

	if tipo == 'filme':
		#fanart = posterAux
		xbmcplugin.setContent(int(sys.argv[1]), 'Movies')
	elif tipo == 'serie':
		#fanart = posterAux
		xbmcplugin.setContent(int(sys.argv[1]), 'tvshows')
	elif tipo == 'episodio':
		#fanart = posterAux
		xbmcplugin.setContent(int(sys.argv[1]), 'episodes')
	else:
		if name != 'Refresh':
			xbmcplugin.setContent(int(sys.argv[1]), 'Movies')
	
	overlay = 6
	playcount = 0
	
	infoLabelsAux["overlay"] = overlay
	infoLabelsAux["playcount"] = playcount
	
	liz=xbmcgui.ListItem(name, iconImage=iconimage, thumbnailImage=iconimage)
	liz.setProperty('fanart_image', fanart)
	liz.setArt({'fanart': fanart})
	liz.setInfo( type="Video", infoLabels=infoLabelsAux )

	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]),url=u,listitem=liz,isFolder=True)
	return ok

def addLinkCanal(name,url,iconimage,idcanal,id_p):
	infoLabelssss = {"title": name, "genre": 'All'}
	ok=True
	cm=[]
	
	liz = xbmcgui.ListItem(name, iconImage=iconimage, thumbnailImage=iconimage)
	liz.setInfo( type="Video", infoLabels=infoLabelssss)
	liz.addContextMenuItems(cm, replaceItems=False)
	liz.setProperty('IsPlayable', 'true')
	liz.setProperty('fanart_image', os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv.png'))
	liz.setArt({'fanart': os.path.join(__ART_FOLDER__, __SKIN__, 'fundo_tv.png')})
	u = sys.argv[0] + "?url=" + urllib.quote_plus(url) + "&mode=11&name=" + urllib.quote_plus(name) + "&iconimage=" + urllib.quote_plus(iconimage)+"&stream_id="+str(idcanal)
	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz)
	return ok
	
def abrir_url(url, post=None, header=None, code=False, erro=False):
	if header == None:
		header = headers
	if post:
		req = urllib2.Request(url, data=post, headers=header)
	else:
		req = urllib2.Request(url, headers=header)
	try:
		response = urllib2.urlopen(req)
	except urllib2.HTTPError as response:
		if erro == True:
			return str(response.code), "asd"
	link=response.read()
	
	if 'judicial blblblblbl' in link:
		return 'DNS'
	if code:
		return str(response.code), link

	response.close()
	return link

def addLink2(name,url,iconimage):
	ok=True
	liz = xbmcgui.ListItem(name, iconImage=iconimage, thumbnailImage=iconimage)
	liz.setProperty('fanart_image', iconimage)
	liz.setArt({'fanart': iconimage})
	liz.setInfo( type="Video", infoLabels={ "Title": name })
	liz.setProperty('IsPlayable', 'true')
	u = sys.argv[0] + "?url=" + url + "&mode=106&name=" + name + "&iconimage=" + iconimage
	ok=xbmcplugin.addDirectoryItem(handle=int(sys.argv[1]), url=u, listitem=liz)
	return ok


###################################################################################
#							  DEFININCOES										  #
###################################################################################	

def vista_Grupos():
	opcao = __ADDON__.getSetting('canaisView')
	if opcao == '0': xbmc.executebuiltin("Container.SetViewMode(50)")
	elif opcao == '1': xbmc.executebuiltin("Container.SetViewMode(51)")
	elif opcao == '2': xbmc.executebuiltin("Container.SetViewMode(500)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(509)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(508)")
	elif opcao == '4': xbmc.executebuiltin("Container.SetViewMode(504)")
	elif opcao == '5': xbmc.executebuiltin("Container.SetViewMode(503)")
	elif opcao == '6': xbmc.executebuiltin("Container.SetViewMode(515)")
	elif opcao == '7': xbmc.executebuiltin("Container.SetViewMode(55)")

def vista_Canais():
	opcao = __ADDON__.getSetting('canaisView2')
	if opcao == '0': xbmc.executebuiltin("Container.SetViewMode(50)")
	elif opcao == '1': xbmc.executebuiltin("Container.SetViewMode(51)")
	elif opcao == '2': xbmc.executebuiltin("Container.SetViewMode(500)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(509)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(508)")
	elif opcao == '4': xbmc.executebuiltin("Container.SetViewMode(504)")
	elif opcao == '5': xbmc.executebuiltin("Container.SetViewMode(503)")
	elif opcao == '6': xbmc.executebuiltin("Container.SetViewMode(515)")
	elif opcao == '7': xbmc.executebuiltin("Container.SetViewMode(55)")

def vista_menu():
	opcao = __ADDON__.getSetting('menuView')
	if opcao == '0': xbmc.executebuiltin("Container.SetViewMode(50)")
	elif opcao == '1': xbmc.executebuiltin("Container.SetViewMode(51)")
	elif opcao == '2': xbmc.executebuiltin("Container.SetViewMode(500)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(509)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(508)")
	elif opcao == '4': xbmc.executebuiltin("Container.SetViewMode(504)")
	elif opcao == '5': xbmc.executebuiltin("Container.SetViewMode(503)")
	elif opcao == '6': xbmc.executebuiltin("Container.SetViewMode(515)")
	elif opcao == '7': xbmc.executebuiltin("Container.SetViewMode(55)")

def vista_filmesSeries():
	xbmc.executebuiltin("Container.SetViewMode(55)")
	opcao = __ADDON__.getSetting('filmesSeriesView')
	if opcao == '0': xbmc.executebuiltin("Container.SetViewMode(50)")
	elif opcao == '1': xbmc.executebuiltin("Container.SetViewMode(51)")
	elif opcao == '2': xbmc.executebuiltin("Container.SetViewMode(500)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(509)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(508)")
	elif opcao == '4': xbmc.executebuiltin("Container.SetViewMode(504)")
	elif opcao == '5': xbmc.executebuiltin("Container.SetViewMode(503)")
	elif opcao == '6': xbmc.executebuiltin("Container.SetViewMode(515)")
	elif opcao == '7': xbmc.executebuiltin("Container.SetViewMode(55)")


def vista_temporadas():
	xbmc.executebuiltin("Container.SetViewMode(55)")
	opcao = __ADDON__.getSetting('temporadasView')
	if opcao == '0': xbmc.executebuiltin("Container.SetViewMode(50)")
	elif opcao == '1': xbmc.executebuiltin("Container.SetViewMode(51)")
	elif opcao == '2': xbmc.executebuiltin("Container.SetViewMode(500)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(509)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(508)")
	elif opcao == '4': xbmc.executebuiltin("Container.SetViewMode(504)")
	elif opcao == '5': xbmc.executebuiltin("Container.SetViewMode(503)")
	elif opcao == '6': xbmc.executebuiltin("Container.SetViewMode(515)")
	elif opcao == '7': xbmc.executebuiltin("Container.SetViewMode(55)")

def vista_episodios():
	xbmc.executebuiltin("Container.SetViewMode(55)")
	opcao = __ADDON__.getSetting('episodiosView')
	if opcao == '0': xbmc.executebuiltin("Container.SetViewMode(50)")
	elif opcao == '1': xbmc.executebuiltin("Container.SetViewMode(51)")
	elif opcao == '2': xbmc.executebuiltin("Container.SetViewMode(500)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(509)")
	elif opcao == '3': xbmc.executebuiltin("Container.SetViewMode(508)")
	elif opcao == '4': xbmc.executebuiltin("Container.SetViewMode(504)")
	elif opcao == '5': xbmc.executebuiltin("Container.SetViewMode(503)")
	elif opcao == '6': xbmc.executebuiltin("Container.SetViewMode(515)")
	elif opcao == '7': xbmc.executebuiltin("Container.SetViewMode(55)")
############################################################################################################
#												GET PARAMS												 #
############################################################################################################		  
def get_params():
	param=[]
	paramstring=sys.argv[2]
	if len(paramstring)>=2:
		params=sys.argv[2]
		cleanedparams=params.replace('?','')
		if (params[len(params)-1]=='/'): params=params[0:len(params)-2]
		pairsofparams=cleanedparams.split('&')
		param={}
		for i in range(len(pairsofparams)):
			splitparams={}
			splitparams=pairsofparams[i].split('=')
			if (len(splitparams))==2: param[splitparams[0]]=splitparams[1]
	return param


params=get_params()
url=None
buildtipo=None
name=None
mode=None
iconimage=None
link=None
senha=None
estilo=None
srtfilm=None
idCanal=None
idffCanal=None
tipologia=None
descricao=None
tipo_user=None
servidor_user=None
data_user=None
s_serv=None
s_user=None
s_pass=None
legenda=None
pagina=None
temporada=None
episodio=None
serieNome=None
fanart=None
thumbnail=None
stream_id=None
duration=None
tiposelect=None

try: duration=urllib.unquote_plus(params["duration"])
except: pass
try: stream_id=urllib.unquote_plus(params["stream_id"])
except: pass
try: url=urllib.unquote_plus(params["url"])
except: pass
try: name=urllib.unquote_plus(params["name"])
except: pass
try: estilo=urllib.unquote_plus(params["estilo"])
except: pass
try: mode=int(params["mode"])
except: pass
try: iconimage=urllib.unquote_plus(params["iconimage"])
except: pass
try: senha=urllib.unquote_plus(params["senha"])
except: pass
try: idCanal=urllib.unquote_plus(params["idCanal"])
except: pass
try: idffCanal=params["idffCanal"]
except: pass
try: srtfilm=urllib.unquote_plus(params["srtfilm"])
except: pass
try: tipologia=urllib.unquote_plus(params["tipologia"])
except: pass
try: descricao=urllib.unquote_plus(params["descricao"])
except: pass
try: tipo_user=urllib.unquote_plus(params["tipo_user"])
except: pass
try: servidor_user=urllib.unquote_plus(params["servidor_user"])
except: pass
try: s_serv=urllib.unquote_plus(params["lolserv"])
except: pass
try: s_user=urllib.unquote_plus(params["loluser"])
except: pass
try: s_pass=urllib.unquote_plus(params["lolpass"])
except: pass
try: link=urllib.unquote_plus(params["link"])
except: pass
try: legenda=urllib.unquote_plus(params["legenda"])
except: pass
try: name=urllib.unquote_plus(params["name"])
except: pass
try: temporada=int(params["temporada"])
except: pass
try: episodio=int(params["episodio"])
except: pass
try: mode=int(params["mode"])
except: pass
try: pagina=int(params["pagina"])
except: pass
try: iconimage=params["iconimage"]
except: pass
try : serieNome=params["serieNome"]
except: pass
try : buildtipo=urllib.unquote_plus(params["buildtipo"])
except: pass
try : fanart=params["fanart"]
except: pass
try : thumbnail=params["thumbnail"]
except: pass
try : data_user=urllib.unquote_plus(params["data_user"])
except: pass
try : tiposelect=params["tiposelect"]
except: pass



###############################################################################################################
#													MODOS													 #
###############################################################################################################
if mode==None or url==None or len(url)<1: menu()
elif mode==1: abrirVideoClube(str(url))
elif mode==2: Abrir_Conta(str(url))
elif mode==3: abrim3u(str(url))
elif mode==4: detect_modification(str(url))
elif mode==5: abrirDefinincoes()
elif mode==6: listatvarchive(str(url))
elif mode==7: listatvarchivecanais(str(name),stream_id,str(url),duration,iconimage,fanart)
elif mode==8: stream_video(name,url,iconimage)
elif mode==9: get_myaccount(name,url,iconimage)
elif mode==10: run_cronjob(name,url,iconimage,thumbnail,fanart)
elif mode==11: PlayUrl(name,url,iconimage)
elif mode==13: CLEARCACHE()
elif mode==14: PURGEPACKAGES()
elif mode==20: listamenusseries(str(name),str(url),iconimage,fanart)
elif mode==21: listamenusfilmes(str(name),str(url),iconimage,fanart)
elif mode==24: listamenusanimes(str(name),str(url),iconimage,fanart)
elif mode==111: filmes(url, pagina)
elif mode==123: series(url)
elif mode==118: getGeneros(url)
elif mode==119: getYears(url)
elif mode==120: pesquisa(url)
elif mode==121: anos(url)
elif mode==122: categorias(url)
elif mode==113: player(name, url, iconimage, temporada, episodio, serieNome)
elif mode==114: getSeasons(url)
elif mode==115: getEpisodes(url)
elif mode==117: download(url, name, temporada, episodio, serieNome)

if mode==None or url==None or len(url)<1:
	xbmcplugin.endOfDirectory(int(sys.argv[1]),cacheToDisc=False)
else:
	if mode !=3 and mode !=6 and mode !=7: 
		xbmcplugin.endOfDirectory(int(sys.argv[1]),cacheToDisc=False)
	else: 
		xbmcplugin.endOfDirectory(int(sys.argv[1]),cacheToDisc=True)"))